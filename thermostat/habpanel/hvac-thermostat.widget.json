{
    "name": "HVAC Thermostat",
    "author": "Jason Jones",
    "settings": [
        {
            "type": "item",
            "id": "group",
            "label": "openHAB Group"
        },
        {
            "type": "choice",
            "choices": "°C,°F",
            "id": "unit",
            "label": "Unit",
            "default": "°C"
        },
        {
            "type": "number",
            "id": "setpointMin",
            "label": "Setpoint Min",
            "default": "5"
        },
        {
            "type": "number",
            "id": "setpointMax",
            "label": "Setpoint Max",
            "default": "30"
        },
        {
            "type": "checkbox",
            "id": "hideHeat",
            "label": "Hide Heat"
        },
        {
            "type": "checkbox",
            "id": "hideCool",
            "label": "Hide Cool"
        },
        {
            "type": "checkbox",
            "id": "hideConstantFan",
            "label": "Hide Constant Fan"
        },
        {
            "type": "checkbox",
            "id": "hideRemoteMode",
            "label": "Hide Remote Mode"
        },
        {
            "type": "checkbox",
            "id": "enableAdvanced",
            "label": "Enable Advanced Popup"
        },
        {
            "type": "string",
            "id": "altPopupTitle",
            "label": "Alternate Popup Title",
            "description": "Name will be used if left blank"
        },
        {
            "type": "color",
            "id": "activeButtonColor",
            "label": "Active Button Color",
            "default": "#3333FF"
        },
        {
            "type": "string",
            "id": "languageItem",
            "label": "openHAB Language Item",
            "description": "Optional."
        }
    ],
    "template": "<style>\n\t.hvac-thermostat-layout-table {\n  \twidth: 100%;\n  }\n\t.hvac-thermostat-layout-table-cell {\n  \tvertical-align: top;\n  \ttext-align: center;\n  }\n  .hvac-thermostat-advanced-data-table {\n  \twidth: 100%;\n  }\n  .hvac-thermostat-advanced-data-table th {\n  \ttext-align: center;\n  }\n  .hvac-thermostat-advanced-data-table td {\n  \tpadding: 0px 5px;\n  \tborder: 1px solid black;\n  }\n</style>\n<div ng-init=\"baseFrameworkGroupName = 'HVAC_Framework_Thermostat_';\n              tempFormat = '%.1f' + ((config.unit) ? ' ' + config.unit : '');\n              setpointMin = (config.setpointMin) ? config.setpointMin : 0;\n              setpointMax = (config.setpointMax) ? config.setpointMax : 100;\n              systems = ((config.hideHeat) && (config.hideCool)) ? ['Off'] : (config.hideHeat) ? ['Off', 'Cool'] : (config.hideCool) ? ['Off', 'Heat'] : ['Off', 'Heat', 'Cool', 'Auto'];\n              constantFanOptions = [{name: 'ConstantFanOFF', command: 'OFF'}, {name: 'ConstantFanON', command: 'ON'}];\n              enableRemoteModeOptions = [{name: 'RemoteModeOFF', command: 'OFF'}, {name: 'RemoteModeON', command: 'ON'}];\n              popupTitle = (config.altPopupTitle) ? config.altPopupTitle : ngModel.name;\n              itemNames = {ActiveMode:'', ConstantFan:'', CoolCall:'', Cooling:'', CoolSP:'', CoolSupplied:'', CurrentTemp:'', Deadband:'', EnableRemoteMode:'', HeatCall:'', Heating:'', HeatSP:'', HeatSupplied:'', Status:'', System:''};\n              dynamicArrays = {AvailableModeItems: [], AdvancedEditorNumbers: []};\n              languageText = {Advanced: 'Advanced', Close: 'Close', ModeTitle: 'Mode', ModeManual: 'Manual',\n              \tModeLockedRemoteMessage: 'Mode cannot be changed. A remote mode is set and locked.',\n              \tRemoteModeTitle: 'Remote Mode / Scheduling', RemoteModeOFF: 'Disable', RemoteModeON: 'Enable',\n              \tHeatSPTitle: 'Heat Setpoint', CoolSPTitle: 'Cool Setpoint', CurrentTempTitle: 'Current Temperature', DeadbandTitle: 'Deadband',\n              \tSystemTitle: 'System', SystemOff: 'Off', SystemCool: 'Cool', SystemHeat: 'Heat', SystemAuto: 'Auto',\n              \tConstantFanTitle: 'Fan', ConstantFanOFF: 'Auto', ConstantFanON: 'On',\n              \tStatusHeatCall: 'Calling for heat', StatusHeating: 'Heating', StatusCoolCall: 'Calling for cool', StatusCooling: 'Cooling', StatusIdle: 'Idle',\n              \tValueAccessTitle: 'Value Access', ItemsTitle: 'Items', PointTitle: 'Point', ItemTitle: 'Item', ValueTitle: 'Value',\n              \tManualToEditMessage: 'Must be in \\'Manual\\' mode to edit values.'\n              \t};\n              \"></div>\n<div style=\"margin: auto;\" ng-if=\"(!getItem(config.group)) || (getItem(config.group) == 'N/A')\">\n  Data binding pending!\n  <br />\n  Verify communication and item configuration.\n</div>\n<div style=\"display: flex; cursor: pointer;\" ng-if=\"(getItem(config.group)) && (getItem(config.group) != 'N/A')\" ng-click=\"openModal('hvacThermostatPopup.html', true, 'lg')\"\n     ng-init=\"groupItems = itemsInGroup(config.group);\n              itemNames.ActiveMode = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'ActiveMode'})[0].name;\n              itemNames.ConstantFan = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'ConstantFan'})[0].name;\n              itemNames.CoolCall = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'CoolCall'})[0].name;\n              itemNames.Cooling = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'Cooling'})[0].name;\n              itemNames.CoolSP = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'CoolSP'})[0].name;\n              itemNames.CoolSupplied = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'CoolSupplied'})[0].name;\n              itemNames.CurrentTemp = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'CurrentTemp'})[0].name;\n              itemNames.Deadband = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'Deadband'})[0].name;\n              itemNames.EnableRemoteMode = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'EnableRemoteMode'})[0].name;\n              itemNames.HeatCall = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'HeatCall'})[0].name;\n              itemNames.Heating = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'Heating'})[0].name;\n              itemNames.HeatSP = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'HeatSP'})[0].name;\n              itemNames.HeatSupplied = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'HeatSupplied'})[0].name;\n              itemNames.RemoteModeRequest = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'RemoteModeRequest'})[0].name;\n              itemNames.Status = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'Status'})[0].name;\n              itemNames.System = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'System'})[0].name;\n              dynamicArrays.AvailableModeItems = (groupItems | filter:{groupNames:baseFrameworkGroupName + 'AvailableMode'});\n              dynamicArrays.AdvancedEditorNumbers = [{name: 'HeatSPTitle', item: itemNames.HeatSP, floor: config.setpointMin, ceil: config.setpointMax},\n                                                        {name: 'CoolSPTitle', item: itemNames.CoolSP, floor: config.setpointMin, ceil: config.setpointMax},\n                                                        {name: 'DeadbandTitle', item: itemNames.Deadband, floor: 0, ceil: 10}];\n              \">\n  <div ng-if=\"config.languageItem\">\n  \t<div ng-repeat=\"(itemKey, itemValue) in $eval(getItem(config.languageItem).label)\" ng-init=\"languageText[itemKey] = itemValue;\"></div>\n  </div>\n  <div style=\"margin: auto;\">\n    <div>{{ngModel.name}}</div>\n    <div class=\"value\">{{ tempFormat | sprintf:itemState(itemNames.CurrentTemp) }}</div>\n    <div class=\"value\">{{\n      (itemState(itemNames.Heating) == 'ON') ? languageText.StatusHeating :\n      (itemState(itemNames.HeatCall) == 'ON') ? languageText.StatusHeatCall :\n      (itemState(itemNames.Cooling) == 'ON') ? languageText.StatusCooling :\n      (itemState(itemNames.CoolCall) == 'ON') ? languageText.StatusCoolCall :\n      languageText.StatusIdle}}</div>\n    <div>{{languageText.ModeTitle}}: {{(itemState(itemNames.ActiveMode) == 'Manual') ? languageText.ModeManual : itemState(itemNames.ActiveMode)}}</div>\n    <div>{{languageText.SystemTitle}}: {{languageText['System' + itemState(itemNames.System)]}}</div>\n    <div>{{itemState(itemNames.Status)}}</div>\n  </div>\n</div>\n<script type=\"text/ng-template\" id=\"hvacThermostatPopup.html\">\n  <div class=\"modal-header\">\n    <div class=\"pull-right\">\n      <button type=\"button\" class=\"btn btn-default\" ng-if=\"config.enableAdvanced\" ng-click=\"openModal('hvacThermostatPopupAdvanced.html', true, 'lg')\">{{languageText.Advanced}}</button>\n      <button type=\"button\" class=\"btn btn-default\" ng-click=\"$close()\">{{languageText.Close}}</button>\n    </div>\n    <h3 class=\"modal-title\">{{popupTitle}}</h3>\n  </div>\n  <div class=\"modal-body\">\n    <table style=\"width: 100%;\">\n    \t<tr>\n        <td rowspan=\"2\" style=\" width: 30%; vertical-align: top; text-align: center; padding: 0px 5px; background-color: #CCCCCC\">\n          <h4>{{languageText.ModeTitle}}</h4>\n          <div class=\"box\" style=\"height: 4em;\" ng-if=\"(itemState(itemNames.RemoteModeRequest) == '') || (itemState(itemNames.RemoteModeRequest) == 'NULL') || (itemState(itemNames.EnableRemoteMode) != 'ON')\"\n               ng-init=\"manualModeModel = { name: languageText.ModeManual, item: itemNames.ActiveMode, command: 'Manual', background_active: config.activeButtonColor }\">\n            <widget-button ng-model=\"manualModeModel\"></widget-button>\n          </div>\n          <div style=\"border-top: 2px solid black; margin-top: 5px;\" ng-if=\"(itemState(itemNames.RemoteModeRequest) == '') || (itemState(itemNames.RemoteModeRequest) == 'NULL') || (itemState(itemNames.EnableRemoteMode) != 'ON')\"\n               ng-init=\"modeModels={}\">\n            <div class=\"box\" style=\"height: 4em; margin: 5px 0px;\" ng-repeat=\"availableModeItem in dynamicArrays['AvailableModeItems'] | orderBy: 'label'\"\n                 ng-init=\"availableModeName = availableModeItem.label.split(';')[0]; modeModels[availableModeName] = { name: availableModeName, item: itemNames.ActiveMode, command: availableModeName, background_active: config.activeButtonColor }\">\n              <widget-button ng-model=\"modeModels[availableModeName]\"></widget-button>\n            </div>\n          </div>\n          <div ng-if=\"(itemState(itemNames.RemoteModeRequest) != '') && (itemState(itemNames.RemoteModeRequest) != 'NULL') && (itemState(itemNames.EnableRemoteMode) == 'ON')\">\n    \t\t\t\t<div>{{(itemState(itemNames.ActiveMode) == 'Manual') ? languageText.ModeManual : itemState(itemNames.ActiveMode)}}</div>\n            <div>{{languageText.ModeLockedRemoteMessage}}</div>\n          </div>\n          <h4 ng-if=\"(!config.hideRemoteMode)\">{{languageText.RemoteModeTitle}}</h4>\n          <table style=\"width: 100%;\" ng-if=\"(!config.hideRemoteMode)\" ng-init=\"enableRemoteModeModels = {}\">\n            <tr>\n              <td style=\"width: 50%;\" ng-repeat=\"enableRemoteModeOption in enableRemoteModeOptions\"\n                  ng-init=\"enableRemoteModeModels[enableRemoteModeOption.name] = { name: languageText[enableRemoteModeOption.name], item: itemNames.EnableRemoteMode, command: enableRemoteModeOption.command, background_active: config.activeButtonColor }\">\n                <div class=\"box\" style=\"height: 4em; margin: 0px 5px 5px 5px;\">\n                  <widget-button ng-model=\"enableRemoteModeModels[enableRemoteModeOption.name]\"></widget-button>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td style=\"vertical-align: top; text-align: center;\">\n          <table style=\"margin: 0; width: 100%\">\n          \t<tr>\n            \t<td style=\"width: 35%\">\n                <table style=\"margin: 0; width: 100%\" ng-if=\"(!config.hideHeat)\">\n                \t<tr>\n                    <td style=\"width: 50%;\">\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.HeatSP) * 1.0) + 0.1); newSP = (newSP > setpointMax) ? setpointMax : newSP; sendCmd(itemNames.HeatSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-up\"></span> 0.1\n                      </button>\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.HeatSP) * 1.0) + 1); newSP = (newSP > setpointMax) ? setpointMax : newSP; sendCmd(itemNames.HeatSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-up\"></span> 1.0\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td colspan=\"2\" ng-init=\"heatSPModel = { name: languageText.HeatSPTitle, item: itemNames.HeatSP, format: tempFormat, font_size: '16' }\">\n                      <div class=\"box\" style=\"height: 5em; margin: 5px 10px;\">\n                        <widget-dummy ng-model=\"heatSPModel\"></widget-dummy>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                  \t<td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.HeatSP) * 1.0) - 0.1); newSP = (newSP < setpointMin) ? setpointMin : newSP; sendCmd(itemNames.HeatSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-down\"></span> 0.1\n                      </button>\n                    </td>\n                  \t<td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.HeatSP) * 1.0) - 1); newSP = (newSP < setpointMin) ? setpointMin : newSP; sendCmd(itemNames.HeatSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-down\"></span> 1.0\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n              <td style=\"width: 30%\">\n                <div class=\"box\" style=\"height: 8em;\"\n                     ng-init=\"currentTempModel = { name: languageText.CurrentTempTitle, item: itemNames.CurrentTemp, format: tempFormat, font_size: '20' }\">\n                  <widget-dummy ng-model=\"currentTempModel\"></widget-dummy>\n                </div>\n              </td>\n            \t<td style=\"width: 35%\">\n                <table style=\"margin: 0; width: 100%\" ng-if=\"(!config.hideCool)\">\n                \t<tr>\n                    <td style=\"width: 50%;\">\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.CoolSP) * 1.0) + 0.1); newSP = (newSP > setpointMax) ? setpointMax : newSP; sendCmd(itemNames.CoolSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-up\"></span> 0.1\n                      </button>\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.CoolSP) * 1.0) + 1); newSP = (newSP > setpointMax) ? setpointMax : newSP; sendCmd(itemNames.CoolSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-up\"></span> 1.0\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td colspan=\"2\" ng-init=\"coolSPModel = { name: languageText.CoolSPTitle, item: itemNames.CoolSP, format: tempFormat, font_size: '16' }\">\n                      <div class=\"box\" style=\"height: 5em; margin: 5px 10px;\">\n                        <widget-dummy ng-model=\"coolSPModel\"></widget-dummy>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                  \t<td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.CoolSP) * 1.0) - 0.1); newSP = (newSP < setpointMin) ? setpointMin : newSP; sendCmd(itemNames.CoolSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-down\"></span> 0.1\n                      </button>\n                    </td>\n                  \t<td>\n                      <button type=\"button\" class=\"btn btn-default btn-lg\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-click=\"newSP = ((itemState(itemNames.CoolSP) * 1.0) - 1); newSP = (newSP < setpointMin) ? setpointMin : newSP; sendCmd(itemNames.CoolSP, newSP);\">\n                        <span class=\"glyphicon glyphicon-chevron-down\"></span> 1.0\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </table>\n          <br/>\n          <table style=\"width: 100%; border-top: 1px solid black;\" ng-init=\"systemModels={}\">\n            <tr>\n              <td style=\"width: 20%\">\n                <h4>{{languageText.SystemTitle}}</h4>\n              </td>\n              <td ng-style=\"{ width: (80 / systems.length) + '%' }\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-repeat=\"system in systems\">\n                <div style=\"margin: 0; padding: 0px 5px;\">\n                    <div class=\"box\" style=\"height: 4em; margin: 5px 0px;\" ng-init=\"systemModels[system] = { name: languageText['System' + system], item: itemNames.System, command: system, background_active: config.activeButtonColor }\">\n                      <widget-button ng-model=\"systemModels[system]\"></widget-button>\n                    </div>\n                </div>\n              </td>\n              <td style=\"text-align: left;\" ng-if=\"itemState(itemNames.ActiveMode) != 'Manual'\">\n                {{languageText['System' + itemState(itemNames.System)]}}\n              </td>\n            </tr>\n          </table>\n          <table style=\"width: 100%; border-top: 1px solid black;\" ng-if=\"!config.hideConstantFan\" ng-init=\"constantFanModels={}\">\n            <tr>\n              <td style=\"width: 20%\">\n                <h4>{{languageText.ConstantFanTitle}}</h4>\n              </td>\n              <td ng-style=\"{ width: (80 / constantFanModes.length) + '%' }\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\" ng-repeat=\"constantFanOption in constantFanOptions\">\n                <div style=\"margin: 0; padding: 0px 5px;\" ng-init=\"constantFanModels[constantFanOption.name] = { name: languageText[constantFanOption.name], item: itemNames.ConstantFan, command: constantFanOption.command, background_active: config.activeButtonColor }\">\n                    <div class=\"box\" style=\"height: 4em; margin: 5px 0px;\">\n                      <widget-button ng-model=\"constantFanModels[constantFanOption.name]\"></widget-button>\n                    </div>\n                </div>\n              </td>\n              <td style=\"text-align: left;\" ng-if=\"itemState(itemNames.ActiveMode) != 'Manual'\">\n                {{languageText['ConstantFan' + itemState(itemNames.ConstantFan)]}}\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n      <tr>\n      \t<td style=\"vertical-align: bottom; padding: 0px 5px;\">\n          <div>{{\n            (itemState(itemNames.Heating) == 'ON') ? languageText.StatusHeating :\n            (itemState(itemNames.HeatCall) == 'ON') ? languageText.StatusHeatCall :\n            (itemState(itemNames.Cooling) == 'ON') ? languageText.StatusCooling :\n            (itemState(itemNames.CoolCall) == 'ON') ? languageText.StatusCoolCall :\n            languageText.StatusIdle}}</div>\n          <div>{{itemState(itemNames.Status)}}</div>\n        </td>\n      </tr>\n    </table>\n  </div>\n</script>\n<script type=\"text/ng-template\" id=\"hvacThermostatPopupAdvanced.html\">\n  <div class=\"modal-header\">\n  \t<button type=\"button\" class=\"btn btn-default pull-right\" ng-click=\"$close()\">{{languageText.Close}}</button>\n    <h3 class=\"modal-title\">{{languageText.Advanced}}: {{popupTitle}}</h3>\n  </div>\n  <div class=\"modal-body\">\n    <table class=\"hvac-thermostat-layout-table\">\n      <tr>\n        <td class=\"hvac-thermostat-layout-table-cell\" style=\"vertical-align: middle;\">\n          <h4>{{languageText.ValueAccessTitle}}</h4>\n        </td>\n        <td class=\"hvac-thermostat-layout-table-cell\" ng-init=\"advancedEditorNumberModels = {}\">\n          <table style=\"width: 100%;\" ng-if=\"itemState(itemNames.ActiveMode) == 'Manual'\">\n          \t<tr>\n            \t<td ng-repeat=\"advancedEditorNumber in dynamicArrays['AdvancedEditorNumbers']\">\n                <div class=\"box\" style=\"height: 6em; margin: 5px;\" ng-init=\"advancedEditorNumberModels[advancedEditorNumber.name] = { name: languageText[advancedEditorNumber.name], item: advancedEditorNumber.item, floor: advancedEditorNumber.floor, ceil: advancedEditorNumber.ceil, step: 0.1, unit: config.unit }\">\n                  <widget-slider ng-model=\"advancedEditorNumberModels[advancedEditorNumber.name]\"></widget-slider>\n          \t\t\t</div>\n              </td>\n            </tr>\n          </table>\n          <div ng-if=\"itemState(itemNames.ActiveMode) != 'Manual'\">{{languageText.ManualToEditMessage}}</div>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"hvac-thermostat-layout-table-cell\" style=\"vertical-align: middle; width: 4em;\">\n          <h4>{{languageText.ItemsTitle}}</h4>\n        </td>\n        <td class=\"hvac-thermostat-layout-table-cell\">\n        \t<table class=\"hvac-thermostat-advanced-data-table\">\n            <tr>\n            \t<th>{{languageText.PointTitle}}</th>\n              <th>{{languageText.ItemTitle}}</th>\n              <th>{{languageText.ValueTitle}}</th>\n            </tr>\n          \t<tr ng-repeat=\"(itemNameKey, itemNameValue) in itemNames\">\n            \t<td>{{itemNameKey}}</td>\n              <td>{{itemNameValue}}</td>\n              <td>{{((getItem(itemNameValue).type == 'Number') && (itemState(itemNameValue) != 'NULL')) ? ('%.3f' | sprintf:itemState(itemNameValue)) : itemState(itemNameValue)}}</td>\n            </tr>\n            <tr ng-repeat=\"availableModeItem in dynamicArrays.AvailableModeItems | orderBy:'label'\">\n              <td>AvailableMode</td>\n              <td>\n                {{availableModeItem.name}}\n                <br />\n                {{availableModeItem.label.split(';')[0]}}\n              </td>\n              <td style=\"word-wrap: break-word; overflow-wrap: break-word;\">{{availableModeItem.state}}</td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n  </div>\n</script>"
}